pipeline {
    agent any

    environment {
        MAVEN_HOME = '/opt/apache-maven-3.6.3'
        PATH = "${MAVEN_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'main',
                        credentialsId: 'bharath',
                        url: 'https://github.com/optit-cloud-team/optit-lab-springmvc-example.git'
                }
            }
        }
        stage('Verify Dockerfile') {
            steps {
                script {
                    // Print working directory and list files to verify Dockerfile presence
                    sh 'pwd && ls -la recipes'
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                script {
                    // Navigate to the directory containing Dockerfiles
                    dir('recipes') {
                        // Build Docker images using Dockerfiles
                        sh "docker build -f Dockerfilemysql -t bharathoptdocker/mysql:latest ."
                        sh "docker build -f Dockerfile -t bharathoptdocker/my_spring_application:latest ."

                        // List Docker images
                        sh 'docker images'
                    }
                }
            }
        }
        stage('Docker Publish') {
            steps {
                script {
                    // Docker login using credentials
                    withCredentials([usernamePassword(credentialsId: 'bkdockerid', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
                        sh 'docker push bharathoptdocker/mysql:latest'
                        sh 'docker push bharathoptdocker/my_spring_application:latest'
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
